const users = [
  {
    "rule": "admin",
    "_id": "5be2a52a8c89590010b9beb9",
    "email": "ntn641998@gmail.com",
    "picture": "https://lh3.googleusercontent.com/-yKJVcdtfB9I/AAAAAAAAAAI/AAAAAAAAAHU/UIvZOLDNXkQ/photo.jpg",
    "name": "Trung Nghia Nguyen"
  },
  {
    "rule": "writer",
    "_id": "5c2d79b35bfc4d000a0a1742",
    "email": "nguyentrungnghia641998@gmail.com",
    "name": "Nguyen Nghia",
    "picture": "https://lh4.googleusercontent.com/-KbnQdeRzFxg/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcbcH2tcoZpLVSeYil4itQ_S4jFiWQ/mo/photo.jpg"
  },
  {
    "rule": "writer",
    "_id": "5c2ddabce90bed000a3a2160",
    "email": "nguyentrungnghia.it@gmail.com",
    "name": "Nghĩa Nguyễn Trung",
    "picture": "https://lh6.googleusercontent.com/-sCuVRODom-A/AAAAAAAAAAI/AAAAAAAAAAc/jWusb2m3PeU/photo.jpg"
  },
  {
    "rule": "writer",
    "_id": "5c41a995983ac8000b408f5b",
    "email": "nguyenvana641998@gmail.com",
    "name": "Nguyễn Văn A",
    "picture": "https://lh5.googleusercontent.com/-cmjziT4HDx8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcYnFZmFRjOAq0B22LkYoZATx6zs8g/mo/photo.jpg"
  }
]
const categories =[
  {
    "id": "69dfd500-dcdd-11e8-a3c5-b599760405d7",
     "description": "Hàng tiêu dùng",
    "image": "https://i.imgur.com/hGds7Dw.png",
    "name": "Hàng tiêu dùng 2",
    "name_vi": "hang tieu dung 2",
    "slug": "hang-tieu-dung-2-072711071118",
    "status": 0,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "69e29420-dcdd-11e8-a3c5-b599760405d7",
    "description": "Thiết bị điện tử",
    "image": "https://i.imgur.com/hGds7Dw.png",
    "name": "Thiết bị điện tử",
    "name_vi": "thiet bi dien tu",
    "slug": "thiet-bi-dien-tu-072015311018",
    "status": 1,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "69e441d0-dcdd-11e8-a3c5-b599760405d7",
    "description": "Thời trang",
    "image": "https://i.imgur.com/gLqtcvn.png",
    "name": "Thời trang",
    "name_vi": "thoi trang",
    "slug": "thoi-trang-072015311018",
    "status": 1,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "8fc92f10-e25e-11e8-871e-0babd3877d39",
    "description": null,
    "image": null,
    "name": "Empty",
    "name_vi": "empty",
    "slug": "empty-072720071118",
    "status": 1,
    "created_at": "2018-11-07T07:27:20.196Z",
    "parent_categories":[ {
      "id": "69e29420-dcdd-11e8-a3c5-b599760405d7",
      "description": "Thiết bị điện tử",
      "image": "https://i.imgur.com/hGds7Dw.png",
      "name": "Thiết bị điện tử",
      "name_vi": "thiet bi dien tu",
      "slug": "thiet-bi-dien-tu-072015311018",
      "status": 1,
      "created_at": "2018-10-31T07:20:15.678Z",
    }]
  },
  {
    "id": "f74b38c0-e260-11e8-871e-0babd3877d39",
    "description": null,
    "image": null,
    "name": "Empty 2",
    "name_vi": "empty 2",
    "slug": "empty-2-074432071118",
    "status": 1,
    "created_at": "2018-11-07T07:44:32.847Z",
    "parent_categories":[ {
      "id": "69dfd500-dcdd-11e8-a3c5-b599760405d7",
       "description": "Hàng tiêu dùng",
      "image": "https://i.imgur.com/hGds7Dw.png",
      "name": "Hàng tiêu dùng 2",
      "name_vi": "hang tieu dung 2",
      "slug": "hang-tieu-dung-2-072711071118",
      "status": 0,
      "created_at": "2018-10-31T07:20:15.678Z",
    },
    {
      "id": "69e29420-dcdd-11e8-a3c5-b599760405d7",
      "description": "Thiết bị điện tử",
      "image": "https://i.imgur.com/hGds7Dw.png",
      "name": "Thiết bị điện tử",
      "name_vi": "thiet bi dien tu",
      "slug": "thiet-bi-dien-tu-072015311018",
      "status": 1,
      "created_at": "2018-10-31T07:20:15.678Z",
    }]
  }
]
const tags =[
  {
    "id": "69dfd500-dcdd-11e8-a3c5-b599760405d7",
    "description": "Lập trình web",
    "name": "Web",
    "name_vi": "Web",
    "status": 0,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "69e29420-dcdd-11e8-a3c5-b599760405d7",
    "description": "Lập trình mobile",
    "name": "Mobile",
    "name_vi": "Mobile",
    "status": 1,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "69e441d0-dcdd-11e8-a3c5-b599760405d7",
    "description": "Lập trình C#",
    "name": "C#",
    "name_vi": "C#",
    "status": 1,
    "created_at": "2018-10-31T07:20:15.678Z",
  },
  {
    "id": "8fc92f10-e25e-11e8-871e-0babd3877d39",
    "description": null,
    "name": "Empty",
    "name_vi": "empty",
    "status": 1,
    "created_at": "2018-11-07T07:27:20.196Z",
  },
  {
    "id": "f74b38c0-e260-11e8-871e-0babd3877d39",
    "description": null,
    "name": "Empty 2",
    "name_vi": "empty 2",
    "status": 1,
    "created_at": "2018-11-07T07:44:32.847Z",
  }
]
const posts = [
  {
    "id": "3cc57ee0-7846-11e8-a0c8-6d986570f211",
    "name": "Katie Bouman – Cô gái đã dùng thuật toán “chụp” lại ảnh hố đen đầu tiên trong lịch sử",
    "priority": 1,
    "slug": "genaral",
    "short_description": "Để chụp được hình ảnh lỗ đen M87, các nhà khoa học phải sử dụng mạng lưới nhiều kính viễn vọng đặt rải rác trên Trái Đất để ghi lại bức xạ phát ra từ bên ngoài chân trời sự kiện của lỗ đen. Với kích thước nhỏ bé của M87, muốn ghi lại đầy đủ bức xạ từ lỗ đen này, về lý thuyết, chúng ta cần một kính viễn vọng khổng lồ với đường kính xấp xỉ đường kính của Trái Đất.",
    "content":`<p><br></p><p class="ql-align-right"><em>Người viết: Duong Vu</em></p><p>Bức ảnh đầu tiên, hết sức ngoạn mục, về lỗ đen nằm ở trung tâm thiên hà Messier 87 (M87) thực ra không phải một tấm hình thông thường được chụp bằng camera. Việc chụp ảnh lỗ đen bằng camera là hoàn toàn bất khả thi vì hai lý do. Thứ nhất, lỗ đen hoàn toàn đen đối với camera, bởi không có bất cứ thứ gì, ngay cả ánh sáng, có thể thoát khỏi trường hấp dẫn của nó. Thứ hai, cứ giả định rằng lỗ đen phát sáng, M87 quá nhỏ để có thể quan sát được bằng các thiết bị mà loài người hiện có. Tuy mang kích thước tương đương Hệ Mặt Trời với đường kính tới 38 tỷ kilômét và khối lượng gấp 6,5 tỷ lần Mặt Trời, khoảng cách 55 triệu năm ánh sáng từ Trái Đất tới lỗ đen M87 là quá xa. Chụp ảnh M87 giống như cầm điện thoại di động từ Trái Đất để chụp một quả cam trên Mặt Trăng vậy.</p><p><img src="https://techtalk.vn/wp-content/uploads/2019/04/56819198_10156559049233757_9153375606212132864_o.jpg" height="907" width="1280">Để chụp được hình ảnh lỗ đen M87, các nhà khoa học phải sử dụng mạng lưới nhiều kính viễn vọng đặt rải rác trên Trái Đất để ghi lại bức xạ phát ra từ bên ngoài chân trời sự kiện của lỗ đen. Với kích thước nhỏ bé của M87, muốn ghi lại đầy đủ bức xạ từ lỗ đen này, về lý thuyết, chúng ta cần một kính viễn vọng khổng lồ với đường kính xấp xỉ đường kính của Trái Đất.</p><p>Ngay cả khi đã kết hợp hàng loạt kính viễn vọng tại nhiều địa điểm, thông tin thu được từ mạng lưới kính viễn vọng này, tuy bao gồm tới 2 tỷ bức ảnh có độ phân giải cao, vẫn chỉ là những mảnh ghép rời rạc, những mẩu thông tin bé xíu về lỗ đen M87. Những mảnh ghép rời rạc này không cho chúng ta thấy hình ảnh rõ ràng nào về lỗ đen nếu không có thuật toán xử lý hình ảnh được phát triển chủ yếu bởi một nhà khoa học trẻ: Katie Bouman, cô gái đến từ West Lafayette, bang Indiana.</p><p>Tái lập hình ảnh lỗ đen từ hàng tỷ tấm hình vừa rời rạc, vừa không đầy đủ là một nhiệm vụ vô cùng hóc búa. Hãy hình dung chúng ta chỉ được nghe vài nốt nhạc ngẫu nhiên nhưng phải viết ra toàn bộ một bản giao hưởng. Việc tái lập hình ảnh lỗ đen từ các mẩu dữ liệu còn khó khăn gấp bội khi chưa một ai từng thấy lỗ đen trông như thế nào. Chúng ta cũng chưa biết tiên đoán của Einstein về hình dạng xấp xỉ cầu của lỗ đen có chính xác hay không.</p><p><img src="https://techtalk.vn/wp-content/uploads/2019/04/57039955_10156559049973757_3207813349991514112_o.jpg" height="1031" width="1020"></p><p>Trong thời gian làm nghiên cứu sinh tại Viện Công nghệ Massachusetts (MIT), Katie Bouman và cộng sự phát triển nhiều thuật toán khác nhau nhằm xây dựng hình ảnh lỗ đen từ các mẩu dữ liệu. Từ một tập hợp dữ liệu rời rạc, không đầy đủ, vô số khả năng khác nhau về hình ảnh lỗ đen có thể được tái lập, giống như nhiều người cùng được nghe vài nốt nhạc ngẫu nhiên chắc chắn sẽ viết ra những bản nhạc hoàn toàn khác nhau.</p><p>Thuật toán của Katie dựng lên tất cả những khả năng có thể có về hình ảnh lỗ đen, sau đó sắp xếp các hình ảnh này theo mức độ khả dĩ. Công việc này giống như đi tìm tấm hình có xác suất cao nhất sẽ xuất hiện trên Facebook giữa một loạt ảnh, trong đó có những tấm hoàn toàn nhiễu không nhìn ra vật gì, có những tấm ít nhiễu hơn nhưng mờ mờ ảo ảo, và những tấm mà ta có thể nhận ra tương đối rõ ràng vật thể trong ảnh. Tương tự, nếu ta chỉ đưa ra vài dòng mô tả giới hạn về một khuôn mặt cho nhiều họa sĩ ở khắp nơi trên thế giới mà tất cả họ đều vẽ ra cùng một mẫu, khuôn mặt đó có khả năng rất cao chính là khuôn mặt thật.</p><p><img src="https://techtalk.vn/wp-content/uploads/2019/04/56857510_10156559049203757_472790687138447360_n.jpg" height="466" width="800"></p><p>Những ảnh chụp lỗ đen M87 mà ta nhìn thấy là kết quả tái lập từ thuật toán của Katie Bouman. Không chỉ ngoạn mục về mặt thị giác, hình ảnh lỗ đen còn cho phép các nhà khoa học tiếp tục kiểm tra tính chính xác của Thuyết tương đối sau ghi nhận về sóng hấp dẫn cách đây 3 năm. Phát hiện này cũng mở đường cho các nghiên cứu về lỗ đen Sagittarius A* nằm ở trung tâm Dải Ngân Hà của chúng ta, đặc biệt là sự hình thành của các đĩa bồi tụ bao quanh và các luồng tia phát ra từ lỗ đen này.</p><p><a href="https://network.topdev.vn/out&amp;a&amp;c&amp;SlRuc2kyblFQb009" target="_blank"><img src="https://network.topdev.vn/uploads/tao-cv-online-cn-jpg-20190319123338.jpg"></a><img src="https://network.topdev.vn/in&amp;v&amp;a&amp;i&amp;SlRuc2kyblFQb009"></p><p>Katie sinh ra và lớn lên tại thành phố West Lafayette, bang Indiana. Bố cô, Charles Bouman, là giáo sư Đại học Purdue, nơi Neil Armstrong theo học gần 15 năm trước khi ông trở thành người đầu tiên đặt chân lên Mặt Trăng. Theo lời Charles Bouman, con gái ông đã bắt đầu tham gia nghiên cứu về xử lý hình ảnh với các giáo sư ở Purdue ngay từ khi còn học phổ thông tại West Lafayette.</p><p><img src="https://techtalk.vn/wp-content/uploads/2019/04/56877187_10156559051443757_5953619468839026688_n.jpg" height="406" width="720"></p><p>Sau khi hoàn thành chương trình cử nhân ở Đại học Michigan, Katie lần lượt lấy bằng thạc sĩ và tiến sĩ tại Viện Công nghệ Massachusetts trước khi trở thành nghiên cứu sinh sau tiến sĩ tại Trung tâm Vật lý thiên văn Harvard-Smithsonian. Với thành tích nghiên cứu xuất sắc và đóng góp đáng kể vào dự án chụp ảnh lỗ đen, Katie vừa được bổ nhiệm làm giáo sư Viện Công nghệ California (Caltech) khi mới 29 tuổi, ngay trước khi hình ảnh đầu tiên về lỗ đen do cô tái lập được công bố rộng rãi.</p><p>Trong bài nói chuyện trên TED cách đây gần 2 năm, Katie nói rằng ý tưởng của cô sẽ không bao giờ trở thành hiện thực nếu không được tham gia vào nhóm nghiên cứu bao gồm các nhà khoa học xuất sắc đến từ rất nhiều lĩnh vực khác nhau. Cô cổ vũ mọi người cùng nhau hợp tác để mở rộng ranh giới của khoa học, ngay cả khi thoạt đầu nó có vẻ bí ẩn như lỗ đen, bởi vì những thứ tuyệt vời nhất là những gì chúng ta không nhìn thấy được bằng mắt thường.</p><p><img src="https://techtalk.vn/wp-content/uploads/2019/04/56622559_10156559051378757_7621459551681773568_o.jpg" height="912" width="1366"></p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2019/04/56857510_10156559049203757_472790687138447360_n-696x405.jpg",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  }, {
    "id": "3cc57ee0-7846-11e8-a0c8-6d98653112",
    "name": "Câu chuyện của RESTful API",
    "priority": 1,
    "slug": "web",
    "short_description": "REST API hay RESTful API là một cái gì đó mà nếu bạn làm về web thì bạn không gặp một lần thì bạn gặp nhiều lần, nói chung là rất rất nhiều lần rồi đúng không..!!!",
    "content":`<p>REST API hay RESTful API là một cái gì đó mà nếu bạn làm về web thì bạn không gặp một lần thì bạn gặp nhiều lần, nói chung là rất rất nhiều lần rồi đúng không..!!!</p><h2>Web Service là gì?</h2><p>Trước khi bàn về RESTful chúng ta sẽ bàn sơ về web service.</p><p>Bạn vào chrome và gõ&nbsp;<a href="https://ln.mrsoi.com/" target="_blank">https://ln.mrsoi.com</a>&nbsp;thì trang web light novel vietsub hiển thị ra và bạn đọc truyện, đó là nội dung bình thường mà bạn (<em>người dùng cuối</em>) và đọc truyện.</p><p>Trong khi đó&nbsp;<strong>Web Service</strong>&nbsp;là một dịch vụ web, nó cung cấp các thông tin thô, và khó hiểu với đa số người dùng và vì vậy nó được sử dụng bởi các ứng dụng (Web front end, app di động). Các ứng dụng này sẽ chế biến các dữ liệu thô trước khi trả về cho bạn (<em>người dùng cuối</em>). Bạn có thể vào&nbsp;<a href="https://ln.mrsoi.com/wp-json/wp/v2/posts/" target="_blank">https://ln.mrsoi.com/wp-json/wp/v2/posts/</a>&nbsp;để xem dữ liệu này nó như thế nào..</p><p>Các&nbsp;<strong>Web Service</strong>&nbsp;thường cung cấp các dữ liệu thô mà nó khó hiểu đối với đa số người dùng thông thường, chúng thường được trả về dưới dạng&nbsp;<code>XML</code>&nbsp;hoặc&nbsp;<code>JSON</code>.</p><h2>Resource là gì?</h2><p><strong>Resource</strong>&nbsp;là&nbsp;<strong>tài nguyên</strong>!!! :V :V</p><p>Và quản lý&nbsp;<strong>tài nguyên</strong>&nbsp;chính là nhiệm vụ quan trọng và chiếm phầm lớn thời gian trong việc phát triển website.</p><p>Trong đó&nbsp;<strong>resource</strong>&nbsp;của các&nbsp;<em>website khác nhau</em>&nbsp;thì có thể sẽ&nbsp;<em>khác nhau</em>, ví dụ:</p><ul><li><strong>Facebook</strong>:&nbsp;<strong>resource</strong>&nbsp;nó có thể là người dùng, fanpage….</li><li><strong>Tiki</strong>: thì có thể là sản phẩm, người dùng….</li><li><strong>Blog của Sói</strong>: Thì là mấy cái bài viết linh tinh của sói…</li></ul><p>Và quản lý một resource của một website bao gồm 4 tác vụ chính:</p><ul><li>Thêm một resource.</li><li>Lấy thông tin một resource.</li><li>Cập nhật một resource.</li><li>Xóa một resource.</li></ul><p>Từ đó ta lại qua phần tiếp theo…</p><h2>Các phương thức HTTP.</h2><p>Các phương thức HTTP&nbsp;<em>(HTTP request methods)</em>&nbsp;là một phần của thế giới hiện nay, tuy nhiên những người biết về nó thì chỉ có lập trình viên. &lt;i class=”em em-sleepy”&gt;&lt;/i&gt;</p><p>GET hay POST thì nó quá nổi tiếng rồi nên mình sẽ nói riêng vê nó ở một bài khác.</p><p>Có tất cả 9 loại request, GET và POST là 2 loại thông dụng được sử dụng nhiều hiện này:</p><ul><li><strong>GET</strong>: được sử dụng để lấy thông tin từ server theo URI đã cung cấp.</li><li><strong>HEAD</strong>: giống với GET nhưng response trả về không có body, chỉ có header.</li><li><strong>POST</strong>: gửi thông tin tới server thông qua các biểu mẫu HTTP.</li><li><strong>PUT</strong>: ghi đè tất cả thông tin của đối tượng với những gì được gửi lên.</li><li><strong>PATCH</strong>: ghi đè các thông tin được thay đổi của đối tượng.</li><li><strong>DELETE</strong>: xóa tài nguyên trên server.</li><li><strong>CONNECT</strong>: thiết lập một kết nối tới server theo URI.</li><li><strong>OPTIONS</strong>: mô tả các tùy chọn giao tiếp cho resource.</li><li><strong>TRACE</strong>: thực hiện một bài test loop – back theo đường dẫn đến resource.</li></ul><p>Nói thật thì ngoài GET, POST, PUT, PATCH, DELETE thì mấy cái còn lại mình chưa từng sử dụng.</p><p>Vậy giờ quay lại cái phần&nbsp;<strong>Resource là gì?</strong>&nbsp;bên trên ta có thể dễ dàng thấy:</p><ul><li>Thêm một resource. (Ta dùng POST)</li><li>Lấy thông tin một resource. (Ta dùng GET)</li><li>Cập nhật một resource. (Ta dùng PUT hay PATCH)</li><li>Xoá một resource. (Ta dùng DELETE)</li></ul><p>Cơ mà để lấy thông tin một bài viết có id là&nbsp;<code>22</code>&nbsp;thì mình có cả trăm ngàn cách để xem, ví dụ như:</p><ul><li>Gửi một request tới URL&nbsp;<code>http://example.com/posts?id=22</code>&nbsp;với HTTP method là GET</li><li>Gửi một request tới URL&nbsp;<code>http://example.com/posts/22</code>&nbsp;với HTTP method là GET</li><li>Gửi một request tới URL&nbsp;<code>http://example.com/action=view_post&amp;id=22</code>&nbsp;với HTTP method là GET</li><li>Gửi một request tới URL&nbsp;<code>http://example.com/view_post&amp;id=22</code>&nbsp;với HTTP method là GET</li><li>Gửi một request tới URL&nbsp;<code>http://example.com/posts?id=22</code>&nbsp;với HTTP method là POST</li><li>Gửi một request tới URL&nbsp;<code>http://example.com/posts/22</code>&nbsp;với HTTP method là POST</li><li>…</li></ul><p>Và sau hàng trăm, triệu năm như thế thì người ta đã có một vài tiêu chuẩn để thống nhất cách quản lý tài nguyên. Các tiêu chuẩn này (hay còn được gọi là Web API hoặc HTTP API) quy định một cách thống nhất việc quản lý các tài nguyên của trang web. Và RESTful là một trong các web API được sử dụng phổ biến ngày nay.</p><h2>RESTful API là gì?</h2><p>Cuối cùng cũng tới phần quan trọng nhất!!! Mừng quá… :V :</p><h3>Nguyên tắc thiết kế của REST API?</h3><h4>1. Dùng HTTP method rõ ràng như sau.</h4><p>Chúng ta có 4 HTTP method cơ bản bao gồm POST, GET, PUT, DELETE. Với mỗi method sẽ ứng với một chức năng tương ứng của API là tạo, đọc, sửa và xoá. Như sau nè:</p><p><img src="https://cdn-images-1.medium.com/max/800/1*YRFNzFCvu0gdRHWoTOctPw.png" alt="Nguyên tắc"></p><p>Đó là một nguyên tắc nhỏ nếu bạn muốn API mình rõ ràng.</p><h4>2. Sử dụng danh từ số nhiều và không sử dụng động từ.</h4><p>Ví dụ như&nbsp;<em>/dogs</em>,&nbsp;<em>/cats</em>,… chứ không phải là&nbsp;<em>/getAllDog</em>,…</p><h4>3. Chỉ sử dụng danh từ số nhiều.</h4><p>Không vừa dùng số nhiều vừa dùng số ít.</p><h4>4. Versioning</h4><p>Versioning là một điều bắt buộc với tất cả resource, việc đánh version cho resource tuân thủ 2 nguyên tắc sau:</p><ul><li>Bắt đầu bằng “v” và kết thúc bằng một số nguyên dương , tránh dùng số thập phân (dùng v1 thay vì v1.5)</li><li>Versioning sẽ được đặt ở vị trí đầu tiên của resource</li></ul><h4>5. HTTP status code và error message</h4><p>Chuẩn HTTP cung cấp cho ta rất nhiều status code. Chúng ta sẽ không cần biết hết tất cả nhưng ít nhất nên biết đến những status code:</p><ul><li>200 — OK — Everything is working</li><li>304 — Not Modified — The client can use cached data</li><li>400 — Bad Request — The request was invalid or cannot be served. The exact error should be explained in the error payload. E.g. „The JSON is not valid“</li><li>401 — Unauthorized — The request requires an user authentication</li><li>403 — Forbidden — The server understood the request, but is refusing it or the access is not allowed.</li><li>404 — Not found — There is no resource behind the URI.</li><li>422 — Unprocessable Entity — Should be used if the server cannot process the enitity, e.g. if an image cannot be formatted or mandatory fields are missing in the payload.</li><li>500 — Internal Server Error — API developers should avoid this error. If an error occurs in the global catch blog, the stracktrace should be logged and not returned as response.</li></ul><h2>Rồi REST rồi REST(ful)</h2><p>Cái gì mà REST rồi còn RESTful?</p><blockquote><em>REST là viết tắt của cụm từ Representational State Transfer và các ứng dụng sử dụng kiểu thiết kế REST thì được gọi là RESTful (-ful là tiếp vị ngữ giống như beauty và beautiful). Tất nhiên bạn cũng có thể sử dụng thuật ngữ REST thay cho RESTful và ngược lại.</em></blockquote><p>Dài thật là dài và dài thật dài, mệt quá… :V :v</p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2019/01/maxresdefault-696x392.png",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  }, {
    "id": "3cc57ee0-7846-11e8-a0c8-6d986570f214",
    "name": "Phân biệt giữa Front End, Back End và Full Stack",
    "priority": 1,
    "slug": "web",
    "short_description": "Bạn có bao giờ tự hỏi mình rằng: Sau này mình sẽ làm gì? Làm web? Làm Front hay Back ? Và đã chọn rồi thì con đường nào để đạt được mục tiêu đó dễ dàng nhanh chóng và hiệu quả nhất? Nếu bạn có câu hỏi như vậy, thì bạn có thể tham khảo bài viết này của tôi.",
    "content":`<p><strong>Giới thiệu:</strong></p><p>Bạn có bao giờ tự hỏi mình rằng: Sau này mình sẽ làm gì? Làm web? Làm Front hay Back ? Và đã chọn rồi thì con đường nào để đạt được mục tiêu đó dễ dàng nhanh chóng và hiệu quả nhất? Nếu bạn có câu hỏi như vậy, thì bạn có thể tham khảo bài viết này của tôi.</p><p>Vậy tại sao cần phân biệt giữa Front hay Back, bởi vì lựa chọn khác nhau thì sẽ tới việc những thứ CẦN HỌC nó sẽ khác nhau, do đó chúng ta sẽ quyết định ngoài những thứ nhà trường dạy thì chúng ta sẽ học thêm cái gì, để có thể đi làm được. Để trả lời cho câu hỏi, ta chọn gì thì trước tiên ta cần hiểu về những options này đã. Bây giờ chúng ta cần đi tìm hiểu những khái niệm.</p><p><img src="https://viblo.asia/uploads/be88d8d9-dd2c-477a-bb8d-3a16f8e2dcf6.jpg"></p><h3><strong>1. Front End Development</strong></h3><p><strong>Front End Developer là ai</strong></p><p>Front End Developer là người tập trung phát triển phía Client Side, nói một cách đơn giản dễ hiểu là tập trung vào mảng phát triển xây dựng giao diện và trải nghiệm cho người dùng. Để dễ hình dung thì ta vào trang facebook thần thánh, nếu ta là Front End Developer cho trang này thì ta là người xác định: logo đặt ở đâu, màu chủ đạo là màu gì, font chữ to hay nhỏ, ảnh này để kích cỡ thế nào, trái tim bay lên ra sao, nút Like đặt ở đâu….Tức là, người phụ trách phát triển HIỂN THỊ và TRẢI NGHIỆM người dùng cho ứng dụng web. Bạn chính là người quyết định CÁI NHÌN ĐẦU TIÊN của người dùng về trang web. Web đẹp hay xấu, tinh tế hay thô lỗ là do bạn. Vì thế bạn cần có khả năng look &amp; feel và trình thiết kế tuyệt đỉnh.</p><p><strong>Kỹ năng Front End</strong></p><p>Các ngôn ngữ để phát triển Front End bao gồm 3 ngôn ngữ chủ đạo đó là: HTML, CSS và Javascript. Tuy nhiên, để code nhanh gọn lẹ thì ta có thể sử dụng thêm các framework hay thư viện khác như:</p><ul><li>Một số thư viện/framework nổi tiếng: Bootstrap, jQuery, AngularJS, React JS, Vue JS, EmberJS…</li><li>Kĩ năng thiết kế, sử dụngPhotoshop. Kiến thức và kinh nghiệm về UI/UX.</li><li>LESS, SASS (stylesheet language).</li><li>Sử dụng npm, grunt, … để optimize, minimize HTML/CSS/JS.</li><li>Kiến thức về Ajax, cách thiết kế giao diện responsive …..</li></ul><p>Tuy nhiên, đó chỉ là vài cái ngôn ngữ ví dụ. Nhưng thực tế mà nói, để THIẾT KẾ được một website đẹp thì DEV cần nhiều hơn thế. DEV cần biết sử dụng font chữ cho chuẩn (typography), đưa ra bố cục hợp lý, tạo ra các trải nghiệm tinh tế và có lý thuyết cơ bản về PHỐI MẦU. Nói chung, để tạo ra 1 website đẹp không hề đơn giản, và cần nhiều kinh nghiệm cũng như trải nghiệm. Anyway, thì bạn nên bắt đầu từ HTML, CSS, Javascript, sau đó học thêm những cái liệt kê như Jquery, Bootstrap và mở rộng tầm nhìn với những từ khoá typography hay color rule.</p><p>Front End Developer là một nghề rất kiếm ra tiền, nhưng với điều kiện bạn phải làm tốt. Tốt tới đâu thì tiền về tới đó. Nếu bạn thực sự chỉ đam mê và chỉ thích thú với việc tạo ra các website đẹp, thì bạn hãy chăm chút cho nghề nghiệp của mình nhé và có thể học thêm cả photoshop nữa.</p><h3>2. Back End Development</h3><p><strong>Back End Developer là ai</strong></p><p>Nếu Front End Developer có quyền lực kiến tạo nên vẻ đẹp của các trang web, thì Back End developer là người xử lý mọi logic nghiệp vụ phức tạp ở ẩn ở phía sau, giúp cho hệ thống hoạt động trơn tru. Dữ liệu của người dùng, thuật toán phân tích … đều nằm ở back-end. Lấy ví dụ: trên trang face, khi bạn post 1 status, để status ấy được lưu trữ thì cần backend, để status ấy hiển thị cho bạn bè của bạn xem thì cũng cần backend, để status ấy lưu những react (love, phẫn nộ, woo…haha) cũng cần backend …</p><p>Back End Developer là người quyết định cách thức website được vận hành. Người vô cùng quan trọng.</p><p><strong>Kỹ năng Back End</strong></p><p>Để trở thành Back end developer thì bạn cần biết ngôn ngữ phía Server cũng như biết thao tác với cơ sở dữ liệu:</p><ul><li>Ngôn ngữ server-side để viết back-end: C#, Java, Python, Ruby, …. Dĩ nhiên là phải bao gồm kiến thức về những web framework đi kèm các ngôn ngữ này:&nbsp;<a href="http://asp.net/" target="_blank">ASP.NET</a>&nbsp;MVC, Spring, Django, Rails …</li><li>Kiến thức về database SQL: MS SQL Server, MySQL, … Gần đây một số database NoSQL đang khá thịnh hành: Neo4j, MongoDB, …</li><li>Kiến thức về web nói chung, cách viết Web Service, cách đăng nhập và phân quyền .</li><li>Kiến thức về 1 số CMS: WordPress, Joomla, Umbraco, ….</li></ul><p>Kiến thức phần back-end rất nhiều và phức tạp, do đó một back-end developer chỉ nên tập trung vào 2-3 ngôn ngữ chính, đừng ráng ôm hết kẻo “tấu hỏa nhập ma”. Code phần back-end thường rất nhiều và “khủng”, do đó cần có cấu trúc tốt, dễ cải tiến và mở rộng (bằng cách áp dụng SOLID). Back-end developer có thể trau dồi kiến thức để leo lên vị trí System Analyst hoặc Software Architecture.</p><h3>3. Full Stack Development</h3><p><strong>Full Stack Developer là ai</strong></p><p>Full Stack là làm đủ cả Front End lẫn Back End Lập trình viên vừa có tư duy logic lại có óc thẩm mĩ tinh tế. Vừa code server giỏi lại biết linh hoạt biến hoá với css.</p><p>Các lập trình viên full stack làm việc giống như các lập trình viên back-end ở phía máy chủ của lập trình web, nhưng họ có thể cũng thành thạo các ngôn ngữ front-end để điều khiển nội dung trông như thế nào ở phía giao diện của trang web. Họ là những người đa năng.</p><p><strong>Kỹ năng Full Stack</strong></p><p>Để trở thành 1 lập trình viên full stack thì bạn cần có những skill sau:</p><p><img src="https://viblo.asia/uploads/b1cb0100-e5dd-40f6-b902-c56568e56a3b.jpg"></p><p><img src="https://viblo.asia/uploads/266a9175-3d40-4838-866a-e127dc6185ad.jpg"></p><p>Bất kể là sử dụng công cụ xác định nào, tùy thuộc vào dự án và khách hàng, các lập trình viên full stack nên có kiến thức ở mọi cấp độ về cách web hoạt động: cài đặt và cấu hình các máy chủ Linux, viết các API server-side, nhảy vào phần JavaScript client-side của một ứng dụng, và cũng cần có “con mắt thẩm mỹ” với CSS.</p><p>Sử dụng những công cụ này, các lập trình viên full stack cần có khả năng ngay lập tức xác định trách nhiệm của client-side hay server-side, và trình bày rõ ràng về mặt ưu nhược điểm của các giải pháp khác nhau.</p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2018/11/learning-web-development-1024x582-696x396.jpg",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  }, {
    "id": "3cc57ee0-7846-11e8-a0c8-6d986570f5",
    "name": "Cẩm nang cho người bắt đầu học lập trình web trong năm 2018 (Phần 1)",
    "priority": 1,
    "slug": "web",
    "short_description": `Bạn muốn thử học lập trình web, nhưng không biết nên bắt đầu từ đâu?

    Chắc hẳn bạn cũng đã thử tìm kiếm những khóa học trên google, nhưng lại có quá nhiều nguồn tài liệu và đa số chúng lại chứa nhiều thông tin khiến bạn quá tải.`,
    "content":`<p>Bạn muốn thử học lập trình web, nhưng không biết nên bắt đầu từ đâu?</p><p>Chắc hẳn bạn cũng đã thử tìm kiếm những khóa học trên google, nhưng lại có quá nhiều nguồn tài liệu và đa số chúng lại chứa nhiều thông tin khiến bạn quá tải.</p><p><strong>Bạn chỉ cần những kiến thức cơ bản nhất về lập trình web – một tài liệu cung cấp các giải thích tổng thể và giúp bạn có định hướng phát triển</strong></p><p><strong>Đó là lý do tại sao tôi viết bài này. Bài viết sẽ chỉ cung cấp các kiến thức về công nghệ năm 2018 trong lĩnh vực lập trình web ở mức độ cơ bản nhất nếu bạn muốn thử sức trong lĩnh vực này.&nbsp;Nếu bạn là người mới học lập trình, đây là bài viết dành cho bạn!</strong></p><p><strong>Bài viết sẽ bao gồm những phần sau:</strong></p><ul><li>Những kiến thức cơ bản trong lập trình web,</li><li>Cái nhìn tổng thể về các ngôn ngữ lập trình và các frameworks,</li><li>Các nguồn tài liệu hữu ích.</li></ul><p>Đó là tất cả những gì một người mới chập chững bắt đầu cần để phát triển sự nghiệp trong lĩnh vực này!</p><h2>Phần 1: Chúng ta sẽ bắt đầu với những thứ cơ bản trước:</h2><ul><li><strong>Thế nào là lập trình web:</strong>&nbsp;giải thích điều gì thực sự xảy ra khi bạn tải một trang web trong trình duyệt của bạn.</li><li><strong>HTML, CSS và Javascript</strong>: nền tảng của mọi website</li><li><strong>Các công cụ hữu ích</strong>: sử dụng các trình soạn thảo và Git</li><li>Thế nào là&nbsp;<strong>front-end</strong>&nbsp;và&nbsp;<strong>back-end</strong></li></ul><h2>Phần 2: tiếp theo hãy tìm hiểu về các kĩ năng front-end</h2><ul><li><strong>Responsive design</strong>: đảm bảo website của bạn nhìn tuyệt đỉnh kể cả trên máy tính, tablets hay điện thoại</li><li><strong>Grunt, Gulp và WebPack</strong>: sử dụng các build tools hỗ trợ</li><li>Giới thiệu về các&nbsp;<strong>framework của Javascript</strong>: React, Vue và Angular</li></ul><h2>Phần 3: Các kĩ năng back-end</h2><ul><li>Tổng thể về các&nbsp;<strong>ngôn ngữ back-end</strong>&nbsp;thường được sử dụng</li><li>Giới thiệu về&nbsp;<strong>cơ sở dữ liệu</strong>&nbsp;và ngôn ngữ cơ sở dữ liệu</li><li>Cơ bản về cách thiết lập một website trên&nbsp;<strong>máy chủ</strong></li></ul><h2>Kết: tài liệu tham khảo</h2><ul><li>Danh sách các khóa học online, các bài hướng dẫn và những quyển sách hữu ích.</li></ul><p>Trước khi đi qua tất cả các kiến thức trên về website, hãy bắt đầu với bản thân bạn trước đã!</p><h2>Mục đích tối thượng khi học lập trình của bạn là gì?</h2><p>Trong cuốn sách&nbsp;<em>7 thói quen của người thành đạt</em>, Stephen R.Covey đã khẳng định để thành công, bạn phải bắt đầu bằng “sự kết thúc trong tâm trí” trước đã.</p><p>Ngoài lý do khiến bạn bắt đầu học lập trình, điều gì mà bạn muốn nhắm tới sau khi học xong?</p><p><strong>Điều gì là mục tiêu tối thượng của bạn?</strong></p><p><strong>Bạn đang tìm kiếm một sở thích vui vui? một sự thay đổi nghề nghiệp? Hay chỉ đơn giản là một công việc linh động giúp bạn có thể sắp xếp thời gian gần gũi với gia đình nhiều hơn?</strong></p><p><strong>Cách bạn tiếp cận với lập trình web nên được dựa trên mục tiêu của bạn.</strong></p><p><strong>Khi đọc bài viết này, hãy nhớ kĩ các mục tiêu của bạn trong đầu và để chúng quyết định: ngôn ngữ nào bạn nên học, thậm chí là cách bạn học nó như thế nào.</strong></p><p><strong>Ok đủ rồi, hãy bắt đầu với các kiến thức cơ bản trước đã!<img src="https://cdn-images-1.medium.com/max/800/1*wCBlcgi36bFR_JfU1pcp8Q.png"></strong></p><h2>Phần 1: Kiến thức nền tảng</h2><p>Tôi sẽ bắt đầu bằng một điều hiển nhiên trước:&nbsp;<strong>Trọng tâm của lập trình web là việc xây dựng các websites</strong></p><p><strong>Một website có thể rất đơn giản như một trang web tĩnh hay phức tạp như các ứng dụng web ngày nay. Nếu bạn có thể xem một thứ gì đó trong một trang web trên trình duyệt của bạn, thứ đó chắc chắn liên quan tới lập trình web.</strong></p><p><strong>Dưới đây là một giải thích đơn giản cách các websites hoạt động:</strong></p><ol><li><strong>Websites</strong>&nbsp;về bản chất chỉ là tập hợp các file được lưu trữ trên các máy tính gọi là máy chủ.</li><li><strong>Server / Máy chủ</strong>&nbsp;là các máy tính dùng để “host” website, nôm na là lưu trữ các file của websites. Các server được kết nối trong mạng lưới khổng lồ World Wide Web hay còn gọi là Internet.</li><li><strong>Browsers/Trình duyệt</strong>&nbsp;là các phần mềm chạy trên máy tính của bạn. Chúng tải các file của websites qua kết nối internet. Máy tính của bạn được coi như một&nbsp;<strong>client</strong>&nbsp;và được kết nối tới&nbsp;<strong>server</strong></li></ol><p><strong>Tài liệu tham khảo</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/How_does_the_Internet_work" target="_blank">Internet hoạt động thế nào?&nbsp;</a>– Mozilla Developer Network</li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines" target="_blank">Sự khác biệt giữa webpage, website, web server và search engine?</a>&nbsp;-Mozilla Developer Network</li></ul><h3>3 thành phần tạo nên mọi website</h3><p>Như đã nói ở trên, websites là tập hợp các files, chủ yếu là các file HTML, CSS, Javascript. Hãy cùng tìm hiểu chi tiết từng thứ nhé.</p><h3>HTML hay HyperTextMarkup Language</h3><p>HTML là nền tảng của mọi website. Nó là một file quan trọng được tải xuống bằng trình duyệt của bạn khi bạn truy cập một trang web.</p><p>Bạn hoàn toàn có thể tự tạo một website rất rất đơn giản chỉ với HTML mà không cần tới bất kì files nào khác. Nó sẽ khá nhạt nhẽo nhưng HTML là thứ tối thiểu bạn cần để một website có thể được gọi là một website.</p><p>(nếu bạn hứng thú với các kiến thức cơ bản của HTML, bạn có thể đọc qua bài&nbsp;<a href="https://coder-coder.com/how-to-make-simple-website-html/" target="_blank">blog/video</a>&nbsp;hướng dẫn này)</p><h3>CSS hay Cascading Style Sheets</h3><p>Nếu không có CSS, website của bạn sẽ nhạt nhẽo như một văn bản được soạn thảo bằng Word vậy.</p><p>Với CSS, bạn có thể thêm màu, chỉnh phông chữ và sắp xếp lại bố cục trang web theo ý thích của bạn. Thậm chí bạn còn có thể thêm các hiệu ứng chuyển động nếu sử dụng các kĩ thuật CSS nâng cao.</p><h3>Javascript</h3><p>Javascript là ngôn ngữ lập trình cho phép bạn tương tác với các thành phần trên website và thay đổi chúng.</p><p>Nếu CSS trang trí cho HTML thì Javascript thêm tương tác và khiến trang web của bạn sinh động hơn.</p><p>Bạn có thể sử dụng Javascript để cuộn lên đầu trang khi click vào một button, hay làm một slideshow ảnh có các button điều hướng qua lại để xem hình ảnh.</p><p>Để làm việc với HTML, CSS và Javascript, bạn cần dùng một phần mềm khác là trình soạn thảo .</p><h3>Trình soạn thảo nào bạn nên dùng?</h3><p>Đây là một câu hỏi rất phổ biến, đặc biệt là với những bạn mới bắt đầu học lập trình. Câu trả lời là trình soạn thảo phù hợp nhất với bạn sẽ phụ thuộc nhiều vào ngôn ngữ bạn lựa chọn để lập trình.</p><p>Nếu bạn làm việc chủ yếu với HTML, CSS, Javascript, bạn hoàn toàn có thể lập trình bằng Windows Notepad hay TextEdit trên Mac nếu bạn muốn. Nhưng như thế thì có vẻ không chuyên nghiệp lắm.</p><p>Các trình soạn thảo như Sublime hay VS Code có rất nhiều tính năng giúp công việc lập trình của bạn dễ dàng hơn. Chúng cho phép bạn căn lề nhiều dòng, highlight các dòng code theo ngôn ngữ lập trình phù hợp.</p><p><strong><img src="https://cdn-images-1.medium.com/max/800/1*JCnyi8HTMhlUNX3Ym16S8A.jpeg"></strong></p><p><strong>Đối với các ngôn ngữ back-end (chúng ta sẽ tìm hiểu sâu hơn ở phần sau), bạn sẽ cần các trình soạn thảo mạnh mẽ hơn gọi là IDE(môi trường phát triển tích hợp). IDE giúp bạn debug và compile đoạn code ngay trong trình soạn thảo.</strong></p><p><strong>Dưới đây là vài trình soạn thảo phổ biến:</strong></p><p><strong><img src="https://cdn-images-1.medium.com/max/800/0*z4FzNLD6u884XHFT.png"></strong></p><p><a href="https://code.visualstudio.com/" target="_blank"><strong>VS Code</strong></a>: Phiên bản nhẹ hơn của Visual Studio, một IDE của Microsoft. VS Code mới ra đời cách đây vài năm nhưng nó đã trở nên phổ biến vì tốc độ nhanh, dễ sử dụng, các tính năng mạnh mẽ. VS Code là lựa chọn ưa thích của tôi nên có lẽ tôi hơi thiên vị một chút khi nói đến trình soạn thảo này.</p><p><strong><img src="https://cdn-images-1.medium.com/max/800/0*XNya7s0zovmrqiRJ.png"></strong></p><p><a href="https://atom.io/" target="_blank"><strong>Atom</strong></a>: tạo ra bởi GitHub và được quảng cáo là trình soạn thảo có thể “hackable”. Atom là một trình soạn thảo khá được yêu mến. Một trong những điểm mạnh của nó là khả năng tùy biến. Bạn có thể cài các packages và giao diện cho phép bạn thêm các tính năng vào trình soạn thảo.</p><p><strong><img src="https://cdn-images-1.medium.com/max/800/0*Qb5K88ZRZ2d9JP-m.png"></strong></p><p><a href="https://www.sublimetext.com/" target="_blank"><strong>Sublime</strong></a>: Một trình soạn thảo siêu nổi tiếng có tuổi đời lớn hơn so với VS Code hay Atom. Giống như Atom, bạn có thể cài các packages và giao diện. Sublime cũng có tốc độ rất nhanh. Khác với hai trình soạn thảo trên, bạn phải bỏ ra 70 đô để mua bản quyền Sublime nhưng có thể thử nó miễn phí.</p><p>Tôi khuyên bạn nên dùng thử một vài trình soạn thảo trước rồi hẵng chọn ra trình soạn thảo phù hợp nhất với mình. Sau đó hãy gắn bó với nó và học cách sử dụng các phím tắt cũng như tính năng thành thạo.</p><h3>Version control – Quản lý phiên bản</h3><p>Sau khi chọn được trình soạn thảo phù hợp, bạn bắt đầu viết code.</p><p>Tuy nhiên bạn lại vô tình gây ra lỗi trong những dòng code của mình, và mặc cho việc bạn có Ctrl-Z bao nhiêu lần thì code bạn vẫn lỗi, bạn sẽ làm gì trong trường hợp này?</p><p>Câu trả lời là hãy sử dụng&nbsp;<strong>version control</strong>!</p><p>Version control giống như việc bạn có các&nbsp;<strong>save points</strong>&nbsp;(bạn nhớ khi chơi game thường hay có các mốc mà khi nhân vật của bạn chết, bạn có thể chơi lại game từ mốc đó mà không phải bắt đầu lại từ đầu chứ? Nó chính là save points!) trong file code của bạn vậy.</p><p>Nếu bạn nghĩ việc bạn sắp làm có thể làm hỏng mọi thứ trong file code của bạn, bạn có thể tạo một save point mới (gọi là commit). Sau đó nếu bạn có lỡ làm hỏng trang web, bạn có thể khiến code của bạn trở lại trạng thái cũ trước khi chưa bị hỏng bằng version control.</p><p>Version control là một chiếc phao cứu sinh tuyệt vời nếu bạn có lỡ gây ra lỗi và muốn quay về trạng thái ban đầu.</p><p><strong>Nghe tuyệt đó! Nhưng nó hoạt động thế nào vậy?</strong></p><p><strong>Sử dụng một&nbsp;</strong><a href="https://www.atlassian.com/git/tutorials/what-is-version-control" target="_blank">hệ thống quản lý phiên bản</a>&nbsp;(VCS) tức là bạn đã lưu trữ các file code và toàn bộ lịch sử thay đổi của chúng trong một kho lưu trữ gọi là&nbsp;<strong>repository</strong>.</p><p>Thông thường bạn sẽ sử dụng một repository cho mỗi một website hay project</p><p>Sau đó bạn lưu trữ repository của mình trực tuyến ở một chỗ gọi là&nbsp;<strong>central repository</strong>&nbsp;(kho lưu trữ trung tâm), đồng thời giữ một phiên bản của nó ở trong máy tính của bạn trong&nbsp;<strong>local repository</strong>. Bất cứ khi nào bạn thay đổi thứ gì đó trong các file code trên máy tính của bạn, bạn có thể tạo một commit và đẩy nó lên central repository.</p><p>Tiến trình này giúp nhiều người có thể cùng làm việc trên một file code và thay đổi nhiều files đồng thời.</p><p><strong>Git là hệ thống quản lý phiên bản phổ biến nhất hiện nay</strong></p><p><strong>Hệ thống quản lý phiên bản chủ chốt hiện nay là&nbsp;</strong><a href="https://git-scm.com/" target="_blank">Git</a>. Một đối thủ của nó là&nbsp;<a href="https://subversion.apache.org/" target="_blank">Subversion</a>, một hệ thống cũ hơn. Nhưng đa số các bài hướng dẫn và các trại code ngày nay đều sử dụng Git, do đó tôi khuyên bạn hãy học cách sử dụng nó.</p><p><strong>Tài liệu tham khảo</strong></p><ul><li><a href="https://try.github.io/levels/1/challenges/1" target="_blank">Hướng dẫn sử dụng git cơ bản</a></li><li><a href="https://guides.github.com/activities/hello-world/" target="_blank">Hướng dẫn chi tiết về GitHub</a></li></ul><p>Bây giờ chúng ta sẽ đi sâu vào các ngôn ngữ và frameworks được sử dụng, và để bắt đầu hãy cùng đi qua hai thuật ngữ phổ biến:&nbsp;<strong>front-end và back-end</strong></p><h3>Frontend là tất cả những gì bạn nhìn thấy trên một trang web</h3><p><strong><img src="https://cdn-images-1.medium.com/max/800/0*1ZgqE7dZv3rSaRT2.gif"></strong></p><p><strong>Front-end (hay còn gọi là phía client) là tất cả những gì được tải xuống trên trình duyệt của người dùng (client). Nó có thể là HTML và CSS, thứ chúng ta đã nhắc tới phía trên. Ban đầu Javascript cũng chỉ được dùng như một ngôn ngữ front-end nhưng ngày nay bạn cũng có thể sử dụng nó cho cả back-end.</strong></p><p><strong>Front-end quyết định website của bạn sẽ đẹp long lanh hay xấu đau xấu đớn .</strong></p><p><strong>Hay nói cách khác, nó liên quan tới việc website của bạn hoạt động có phù hợp với người dùng không (thứ này gọi là UX – User Experience, tức trải nghiệm người dùng).</strong></p><p><strong>Nếu bạn hứng thú với việc thay đổi CSS để đảm bảo trang web của bạn hoàn hảo tới từng pixel, hay việc thêm các hiệu ứng bằng Javascript cũng làm bạn ngồi lì trước máy tính cả ngày, bạn có thể sẽ đam mê theo đuổi mảng lập trình front-end đấy.</strong></p><h3>Còn backend đảm bảo mọi thứ trên website của bạn hoạt động ổn định – nó là tất cả các tính năng của một trang web.</h3><p><strong><img src="https://media.giphy.com/media/jRK2yEZTIz6Ra/giphy.gif"></strong></p><p><strong>Trong khi front-end là ngoại hình của trang web thì backend là thứ đứng phía sau đảm bảo website của bạn hoạt động với đầy đủ các tính năng hữu ích.</strong></p><p><strong>Nếu bạn đang làm lập trình back-end, bạn hẳn đã phải làm những công việc liên quan tới xử lý các yêu cầu tới server và cơ sở dữ liệu.</strong></p><p><strong>Một số ví dụ về các công việc của backend có thể là việc lưu trữ dữ liệu khi người dùng điền form trên trang liên hệ, hay việc lấy dữ liệu để hiển thị các bài viết theo một danh mục cụ thể mà người dùng yêu cầu. Công việc của back-end cũng có thể bao gồm cả cài đặt website trên server, xử lý vấn đề deploy/triển khai trang web trên server và cài đặt cơ sở dữ liệu SQL.</strong></p><p><strong>Nếu bạn thấy việc triển khai các thành phần chức năng của một trang web thú vị, bạn hoàn toàn phù hợp với mảng back-end.</strong></p><h3>Ghép chúng lại nào</h3><p>Cái tên front-end và back-end bắt nguồn từ việc front-end là những thứ bạn nhìn thấy trong trình duyệt và back-end là những thứ bạn không nhìn thấy nhưng chúng giúp xử lý các tác vụ trong trang web và đảm bảo phần front-end hoạt động ổn định.</p><p>Bạn có thể coi front-end là cửa hiệu của một tập đoàn, thứ mà khách hàng thường nhìn thấy và sử dụng. Back-end là các trung tâm chế tạo và phân phối giúp cửa hiệu hoạt động hiệu quả.</p><p>Trong lập trình web cả front-end và back-end đều quan trọng như nhau.</p><h3>Front end, back end, hay full stack?</h3><p>Trong lập trình web, bạn có thể chỉ cần tập trung vào mỗi front-end hay back-end. Hoặc bạn có thể làm cả hai, công việc này được gọi là lập trình full stack.</p><p>Thứ bạn chọn sẽ phụ thuộc chủ yếu vào hai điều sau:</p><ul><li><strong>Sở thích cá nhân</strong>&nbsp;của bạn: không phải ai cũng thích cả front và back end</li><li><strong>Công việc</strong>: hãy tham khảo danh sách công việc tại địa phương bạn và tham gia vào các buổi gặp mặt lập trình viên để có cái nhìn chung về các lĩnh vực nghề nghiệp.</li></ul><p>Lưu ý là nếu bạn đam mê cả front end và back end, trở thành một lập trình viên full stack sẽ giúp bạn có nhiều cơ hội nghề nghiệp hơn. Cũng có lý thôi, càng nhiều công nghệ bạn biết thì bạn càng dễ kiếm việc.</p><p>Stack Overflow đã báo cáo rằng trong&nbsp;<a href="https://insights.stackoverflow.com/survey/2017#developer-profile-specific-developer-types" target="_blank">bản thống kê người dùng năm 2017</a>&nbsp;của họ, có 63.7% lập trình viên full stack, 24.4% lập trình viên back end, còn 11.9% là lập trình viên front end.</p><p><strong><img src="https://cdn-images-1.medium.com/max/800/1*UYtHdEZA9xAiq_ys3Z9ArQ.png"></strong></p><p><strong>Tuy nhiên điều này cũng phụ thuộc nhiều vào các công ty. Một số công ty tận dụng các lập trình viên full stack, một số lại chia ra thành back và front end. Số khác thậm chí chia các lập trình viên front-end của họ sang mảng thiết kế. Các lập trình viên này sẽ tự thiết kế và xây dựng phần front-end cho ứng dụng.</strong></p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2018/11/71ac617e-0693-4f0d-b32b-40f187e72dfa-696x365.png",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  },{
    "id": "3cc57ee0-7846-11e8-a0c8-6d986570f21z",
    "name": "Cẩm nang cho người bắt đầu học lập trình web trong năm 2018 (Phần 2)",
    "priority": 1,
    "slug": "web",
    "short_description": `Phần 2: Mài dũa các kĩ năng front-end
    Sau khi đã nắm được các kiến thức cơ bản về HTML, CSS và Javascript, bạn có thể đi sâu vào các kĩ năng nâng cao hơn của front-end. Phần này sẽ điểm qua các công cụ hữu ích và kĩ năng giúp bạn phát triển được khả năng của mình.`,
    "content":`
    <h2>Phần 2: Mài dũa các kĩ năng front-end</h2><p>Sau khi đã nắm được các kiến thức cơ bản về HTML, CSS và Javascript, bạn có thể đi sâu vào các kĩ năng nâng cao hơn của front-end. Phần này sẽ điểm qua các công cụ hữu ích và kĩ năng giúp bạn phát triển được khả năng của mình.</p><h3>Responsive design là kiến thức bắt buộc phải có trong thời đại smartphone</h3><p>Khi website mới xuất hiện, bạn chỉ có thể xem chúng trên duy nhất một thiết bị là máy tính.</p><p>Điện thoại thông minh và dữ liệu di động vẫn chưa xuất hiện. Khi làm một website, bạn chỉ phải suy nghĩ về cách chúng hiển thị trên máy tính như thế nào.</p><p>Nhưng hiện nay theo thống kê của&nbsp;<a href="http://gs.statcounter.com/press/mobile-and-tablet-internet-usage-exceeds-desktop-for-first-time-worldwide" target="_blank">Statcounter.com</a>, số lượng người sử dụng điện thoại của họ để duyệt web đã nhiều hơn số lượng sử dụng máy tính.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*LJTR6eQvxIwaQZj4yN4MDQ.png"></p><p>Vậy nên chúng ta cần đảm bảo websites hoạt động và nhìn ổn định trên tất cả mọi thiết bị từ các màn hình lớn nhất cho tới những chiếc điện thoại nhỏ nhất.</p><p>Kĩ năng này gọi là&nbsp;<strong>responsive design</strong>. Nó có tên như vậy vì các thiết kế có thể “tùy biến” trên mọi loại thiết bị hiển thị.</p><p>Bạn có thể kiểm tra một website có responsive hay không bằng cách thay đổi độ rộng của cửa sổ trình duyệt để xem thiết kế đó hiển thị như thế nào.</p><p>Xây dựng một website có thể responsive cần chuẩn bị từ bước lên kế hoạch trong khâu thiết kế. Bạn phải cân nhắc mọi thứ hiển thị như thế nào trên tất cả thiết bị. Tới khâu lập trình, bạn phải sử dụng media queries (chính là&nbsp;<a href="https://viblo.asia/u/media" target="_blank">@media</a>) để điều khiển các thuộc tính CSS được sử dụng như thế nào tùy thuộc vào độ rộng cụ thể.</p><p><strong>Frameworks có thể giúp bạn xây dựng các website responsive nhanh hơn</strong></p><p><a href="https://network.topdev.vn/out&amp;a&amp;c&amp;SlRuc2kyblFQb009" target="_blank"><img src="https://network.topdev.vn/uploads/tao-cv-online-cn-jpg-20190319123338.jpg"></a><img src="https://network.topdev.vn/in&amp;v&amp;a&amp;i&amp;SlRuc2kyblFQb009"></p><p>Bạn có thể tưởng tượng việc viết code CSS cho một trang web responsive mệt mỏi thế nào.</p><p>Nếu bạn không thể dành nhiều thời gian cho nó, hãy sử dụng một framework hỗ trợ responsive như&nbsp;<a href="https://getbootstrap.com/" target="_blank">Bootstrap</a>&nbsp;hay&nbsp;<a href="https://foundation.zurb.com/" target="_blank">Zurb Foundation</a>.</p><p>Sức mạnh của các framework này là nó đã hỗ trợ sẵn các code CSS và Javascript tùy biến. Các thành phần như headlines và buttons đã được viết những đoạn code tùy biến phù hợp. Chúng cũng đi kèm các thành phần Javascript khác như cửa sổ popup dạng modal và thanh điều hướng.</p><p>Sử dụng các công nghệ đã được đảm bảo sẽ giúp bạn xây dựng website dễ dàng hơn. Điều duy nhất bạn cần lưu ý là không nên phụ thuộc quá nhiều vào các frameworks.</p><p><strong>Tài liệu tham khảo</strong></p><ul><li><a href="https://designmodo.com/responsive-design-examples/" target="_blank">Ví dụ về thiết kết responsive từ Designmodo.com</a></li><li><a href="https://developers.google.com/web/fundamentals/design-and-ux/responsive/" target="_blank">Cơ bản về thiết kế responsive webiste của Google</a></li><li><a href="https://www.w3schools.com/bootstrap4/bootstrap_get_started.asp" target="_blank">Hướng dẫn Bootstrap 4 của W3Schools</a></li><li><a href="https://foundation.zurb.com/learn/tutorials.html" target="_blank">Hướng dẫn Zurb Foundation</a></li></ul><h3>Sass sẽ giúp bạn tiết kiệm thời gian và sức lực khi viết CSS.</h3><p>Một khi đã quen với CSS, tôi khuyên bạn nên học Sass vì nó rất tuyệt. Sass là viết tắt của “Syntactically Awesome Style Sheets” và được miêu tả trên trang chủ của nó là “<a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html" target="_blank">phần mở rộng của CSS</a>“. Nó giúp việc viết CSS dễ dàng hơn, linh động hơn và nhanh hơn.</p><p>Đừng hiểu nhầm tôi, CSS vẫn rất tốt. Nhưng khi bắt đầu làm, bạn sẽ nhận ra việc viết CSS thuần mệt mỏi thế nào. Và nếu bạn không siêu cẩn thận trong cách tổ chức các dòng code CSS, đoạn code của bạn sẽ trở nên rối như mớ bòng bong.</p><p><strong>Sass giúp bạn kiểm soát code tốt hơn, nhiều sức mạnh hơn.</strong></p><p>Dưới đây là vài ví dụ chứng minh Sass sẽ giúp cuộc sống bạn dễ dàng hơn nhiều</p><ul><li><strong>Mixins:</strong>&nbsp;Thay vì việc phải sao chép và dán các đoạn code CSS giống nhau hàng nghìn lần, bạn có thể sử dụng mixins. Nó cho phép bạn tái sử dụng các style css.</li><li><strong>Nesting:</strong>&nbsp;Giúp bạn giảm số lượng code trùng lặp bằng cách hỗ trợ kế thừa.</li></ul><p><img src="https://cdn-images-1.medium.com/max/800/1*QeU_j0ZkguS_Sqyzc5hJcg.png"></p><p>Ngắn gọn, sử dụng Sass sẽ giúp bạn tiết kiệm thời gian và giảm sự khó chịu. Hãy học cách sử dụng nó.</p><p><strong>Tài liệu tham khảo</strong></p><ul><li><a href="http://thesassway.com/beginner/getting-started-with-sass-and-compass" target="_blank">Bắt đầu với Sass</a></li><li><a href="http://sass-lang.com/guide" target="_blank">Cơ bản về Sass</a></li></ul><p>Lưu ý: Vì các trình duyệt web không thể đọc được file Sass, bạn phải compile lại các file này về CSS. Để làm được điều đó, bạn phải sử dụng một thứ gọi là build tool và chạy nó trên máy tính của bạn. Vậy nê hãy tiếp tục với phần tiếp theo có chủ đề là&nbsp;<strong>build tool!</strong>.</p><h3>Build tools là gì?</h3><p><img src="https://cdn-images-1.medium.com/max/800/1*f5D9s0KsC4sIauxLEz9oUg.png"></p><p>Chắc hẳn bạn đã nghe tới một vài cụm từ sau: npm, Webpack, Grunt, Gulp, Bower, Yarn,… vân vân và mây mây.</p><p>Các công cụ này thường được nhắc tới với các tên như build tools, task runners, task managers, nói nôm na là “Bây giờ tôi phải cài thứ gì đây?!”</p><p><strong>Vài công cụ giúp bạn làm các công việc mệt mỏi.</strong></p><p>Các build tools như&nbsp;<a href="https://gruntjs.com/" target="_blank">Grunt</a>,&nbsp;<a href="https://gulpjs.com/" target="_blank">Gulp</a>&nbsp;hay&nbsp;<a href="https://webpack.js.org/" target="_blank">Webpack</a>&nbsp;thường được dùng để thực hiện các công việc sau:</p><ul><li><strong>Xử lý</strong>&nbsp;các file Sass thành CSS</li><li><strong>Gộp</strong>&nbsp;nhiều file CSS hoặc Javascript thành một file CSS/Javascript lớn.</li><li><strong>Nén</strong>&nbsp;các files CSS, Javascript, thậm chí là ảnh.</li><li><strong>Tự động</strong>&nbsp;tải lại trình duyệt sau khi thay đổi CSS hay Javascript.</li></ul><p>Bạn hoàn toàn có thể tự làm các công việc trên. Nhưng việc phải làm đi làm lại những thứ đó khi bạn chỉ tạo ra một thay đổi nhỏ trong file CSS hay Javascript có thể làm bạn phát điên.</p><h3>Tôi nên dùng build tool nào?</h3><p>Thời điểm hiện tại Webpack áp đảo toàn bộ các build tools khác, nhưng Grunt và Gulp vẫn được sử dụng. Tôi chắc chắn sẽ học Webpack, nhưng học thêm Grunt hay Gulp cũng là lựa chọn không tồi (Gulp nhanh hơn và việc chạy nó cũng dễ dàng hơn)</p><h3>Một số công cụ để cài thêm các gói packages cho bạn.</h3><p>Để thực hiện các tác vụ trên, bạn thường sẽ phải tải về và cài đặt các gói hỗ trợ hay packages.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*g_5-PNq-uB6f1ooeD-7gNA.png"></p><p>Đó là lí do bạn phải sử dụng các tool như&nbsp;<a href="https://www.npmjs.com/" target="_blank">npm</a>&nbsp;(Node Package Manager),&nbsp;<a href="https://bower.io/" target="_blank">Bower</a>, hay&nbsp;<a href="https://yarnpkg.com/en/" target="_blank">Yarn</a>. Đây là những công cụ cho phép bạn cài đặt các packages trên máy tính chỉ bằng cách gõ các dòng lệnh trong cửa sổ command line. Hiểu đơn giản thì chúng là những tools giúp bạn tải về tools khác.</p><p>Bạn nên học cách sử dụng&nbsp;<strong>npm</strong>&nbsp;vì nó là trình quản lý package chiếm hữu thị phần hiện giờ.&nbsp;<strong>Bower</strong>cũng là một trong những công cụ quản lý packages đầu tiên, nhưng nó đã chính thức bị thay thế – nhà sáng lập&nbsp;<a href="http://bower.io/" target="_blank">Bower.io</a>&nbsp;khuyến khích mọi người sử dụng&nbsp;<strong>Yarn</strong>. Yarn là công cụ có nhiều điểm tương đồng với npm được tạo bởi Google, Faceboook, và một số thành viên khác&nbsp;<a href="https://scotch.io/tutorials/yarn-package-manager-an-improvement-over-npm" target="_blank">hứa hẹn sẽ sửa chữa các vấn đề npm gặp phải</a>. Mặc dù số lượng người sử dụng Yarn vẫn còn ít nhưng tôi khuyên bạn nên thử vì nó đang dần phổ biến.</p><p><strong>Tài liệu tham khảo</strong></p><ul><li><a href="https://codeburst.io/easy-guide-for-webpack-2-0-from-scratch-fe508a3ce44e" target="_blank">Cài đặt Webpack +2.0</a></li><li><a href="https://blog.qmo.io/javascript-tooling-the-evolution-and-future-of-js-front-end-build-tools/" target="_blank">Các công cụ Javascript – Tương lai của JS và các build tools</a></li><li><a href="https://shift.infinite.red/npm-vs-yarn-cheat-sheet-8755b092e5cc" target="_blank">Cheat sheet NPM và Yarn</a></li></ul><h3>Mọi người đều yêu thích các frameworks của Javascript.</h3><p>Bạn có thể đã để ý tới một vài frameworks của Javascript, các thư viện, toolkit,… tất cả đều có cái tên kết thúc bằng “.JS”. Trước tiên hãy cùng xem lại định nghĩa một framework của Javascript là gì cái đã.</p><p>Tùy thuộc vào người bạn nói chuyện cùng, các khái niệm framework, thư việc, bộ công cụ có thể là như nhau (<a href="https://stackoverflow.com/questions/148747/what-is-the-difference-between-a-framework-and-a-library" target="_blank">điều này vẫn đang được tranh cãi</a>). Nhưng tựu chung chúng đều là những công cụ cần thiết để hỗ trợ bạn trong công việc xây dựng một trang web.</p><p><strong>Framework là một cấu trúc được xây sẵn để bạn có thể phát triển ứng dụng của bạn.</strong></p><p>Nói đơn giản framework là một hệ thống được tạo bởi người khác, bạn chỉ việc sử dụng chúng. Để sử dụng framework, bạn phải cài đặt nó trên website của bạn. Sau đó dựa trên các cấu trúc có sẵn của chúng, bạn thêm thắt những thứ do bạn tự xây nên để dựng lên ứng dụng/website của mình. Sử dụng framework giống như việc mua một căn nhà có đầy đủ cấu trúc từ nền, khung, mái nhà vậy, nhưng căn nhà đó vẫn chưa hoàn thiện. Bạn cần phải thêm điện, nước, xây cabin, sơn tường và trang trí.</p>
    `,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2018/11/web-development-696x380.jpg",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  },{
    "id": "3cc57ee0-7846-11e8-a0c8-6d9865705",
    "name": "20 Templates Bootstrap cho Admin Dashboard miễn phí",
    "priority": 1,
    "slug": "web",
    "short_description": "Trong quá khứ, khu vực admin dashboard của một trang web chỉ chứa các tính năng là chính, còn v�� phần giao diện không được cân nhắc nhiều vì vậy trông nó khô khan và không thân thiện lắm đối với user. May mắn thay",
    "content":`<p>Trong quá khứ, khu vực admin dashboard của một trang web chỉ chứa các tính năng là chính, còn về phần giao diện không được cân nhắc nhiều vì vậy trông nó khô khan và không thân thiện lắm đối với user. May mắn thay, mọi sự đã thay đổi, ngày nay có rất nhiều opensource đi cùng những tính năng vượt trội cùng với thiết kế đẹp mắt, hài hòa. Cùng với độ phổ biến ngày một tăng của framework Boostrap, việc tạo nên một admin panel đẹp mắt và đa tính năng cho admin chưa bao giờ dễ dàng đến vậy.</p><p>Tại sao bạn lại chọn sử dụng&nbsp;<a href="https://speckyboy.com/free-bootstrap-framework-templates/" target="_blank">Bootstrap</a>? Với Bootstrap, bạn biết chính xác những gì bạn sẽ nhận được. Đây là một framework mobile-first (được thiết kế ưu tiên từ mobile rồi mới đến các thiết bị khác) tương đối dễ tùy chỉnh, bao gồm nhiều design pattern có sẵn, đi kèm với một&nbsp;<a href="https://speckyboy.com/plugins-for-extending-bootstrap/" target="_blank">thư viện components và widgets</a>&nbsp;“khổng lồ”. Và có lẽ quan trọng hơn cả là, với Bootstrap của bạn sẽ dễ dàng thống nhất giao diện trên tất cả các độ phân giải và giao diện màn hình. Vì thế việc xây dựng dashboard, hay một admin panel cho web app của mình bằng framework này cực kỳ hiệu quả.</p><p>Tất cả các giao diện admin và dashboard Boostrap miễn phí dưới đây đã được xây dựng lại để sử dụng như một giải pháp hoàn thiện giúp bạn nhanh chóng tạo nên một dashboard front-end cho web app của mình. Cũng như những bộ sưu tập widgets của Bootstrap, chúng đều bao gồm nhiều các addon, plugin và feature khác (plugins cho biểu đồ &amp; bảng biểu, lịch trình, quản lý file, và nhiều hơn thế nữa).&nbsp;Tất cả những thứ bạn cần để xây dựng dashboard.</p><p>Và bên cạnh những tính feature tuyệt vời, các giao diện này cũng rất đẹp mắt. Tất cả đều ở dưới đây:</p><h2><strong>CoreUI Bootstrap 4 Admin&nbsp;Template miễn phí</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/core-ui-bottstrap4-free-admin-template-theme.jpg" alt="CoreUI Free grunt Bower Sass Bootstrap 4 Admin Template"></p><p><a href="http://coreui.io/index.html" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/thu-1.png" height="34" width="193"></a></p><h2><strong>Light Bootstrap Dashboard</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/creative-time-light-bootstrap-free-admin-template-theme.jpg" alt="Light Bootstrap Dashboard Free Admin Template"></p><p><a href="https://github.com/creativetimofficial/light-bootstrap-dashboard" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/thuwr.png" height="34" width="339"></a></p><h2><strong>Material Dashboard –&nbsp;Bootstrap&nbsp;Material Design&nbsp;dành cho&nbsp;Admin</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/creative-time-material-design-bootstrap-free-admin-template-theme.jpg" alt="Material Dashboard Free Bootstrap Material Design Admin Free Admin Template"></p><p><a href="https://www.creative-tim.com/product/material-dashboard" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/3.png" height="34" width="281"></a></p><h2><strong>Laravel Admin Bootstrap&nbsp;Template&nbsp;</strong></h2><p><a href="https://network.topdev.vn/out&amp;a&amp;c&amp;SlRuc2kyblFQb009" target="_blank"><img src="https://network.topdev.vn/uploads/tao-cv-online-cn-jpg-20190319123338.jpg"></a><img src="https://network.topdev.vn/in&amp;v&amp;a&amp;i&amp;SlRuc2kyblFQb009"></p><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/laravel-bootstrap-free-admin-template-theme.jpg" alt="Laravel Admin Bootstrap Template Free Admin Template"></p><p><a href="https://github.com/rose1988c/Laravel-Bootstrap-Admin-Template" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/4.png" height="34" width="318"></a></p><h2><strong>Material Design&nbsp;dành cho Bootstrap 4</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2018/01/weekly-news-for-designers-jan-21-16.png" alt="Material Design for Bootstrap 4 (Vue version)"></p><p><a href="https://mdbootstrap.com/vue/" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/5.png" height="34" width="374"></a></p><h2><strong>Bộ Flat UI dành cho&nbsp;BootFlat&nbsp;Admin Dashboard Open-Source&nbsp;</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/flat-bootflat-bootstrap-free-admin-template-theme.jpg" alt="Flat Bootflat Bootstrap UI Kit Free Admin Template"></p><p><a href="https://github.com/silverbux/bootflat-admin" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/6.png" height="34" width="340"></a></p><h2><strong>Startmin Admin Dashboard Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/09/startmin-bootstrap-free-admin-template-theme.jpg" alt="Startmin Admin Dashboard Template Free Bootstrap Template"></p><p><a href="https://github.com/secondtruth/startmin" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/7.png" height="34" width="340"></a></p><h2><strong>Paper Dashboard Bootstrap Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2016/05/monthly-freebies-april-2016-20.jpg" alt="Paper Dashboard Bootstrap Admin Template HTML"></p><p><a href="https://www.creative-tim.com/product/paper-dashboard" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/8.png" height="34" width="265"></a></p><h2><strong>Blocks –&nbsp;A Single-Page Widgetised Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_03.jpg" alt="Blocks free bootstrap admin theme backend template Single-Page Widget"></p><p><a href="http://www.prepbootstrap.com/bootstrap-theme/single-page-admin" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/9.png" height="34" width="185"></a></p><h2><strong>AdminLTE – A Clean Admin Theme</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_04.jpg" alt="AdminLTE bootstrap admin theme backend template"></p><p><a href="https://adminlte.io/" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/10.png" height="34" width="212"></a></p><h2><strong>Gentelella Bootstrap Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2015/05/freebies_for_designers_39.png" alt="Gentelella Bootstrap Admin Template HTML"></p><p><a href="https://github.com/puikinsh/gentelella" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/11.png" height="34" width="340"></a></p><h2><strong>Responsive Dashboard (AngularJS &amp; Bootstrap)</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/08/mthly_freebies_sept_39.jpg" alt="Responsive Dashboard "></p><p><a href="https://github.com/rdash/rdash-angular" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/12.png" height="34" width="306"></a></p><h2><strong>Metis –&nbsp;Template&nbsp;Bootstrap Admin&nbsp;</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_06.jpg" alt="Metis bootstrap admin theme backend template"></p><p><a href="https://github.com/puikinsh/Bootstrap-Admin-Template" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/13.png" height="34" width="179"></a></p><h2><strong>SB Admin v.2 – A Minimal Bootstrap Dashboard Theme</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_07.jpg" alt="SB Admin 2 bootstrap admin theme backend template"></p><p><a href="https://startbootstrap.com/template-overviews/sb-admin-2/" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/14.png" height="34" width="223"></a></p><h2><strong>TemplateVamp – Bootstrap Admin Theme</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_08.jpg" alt="TemplateVamp bootstrap admin theme backend template"></p><p><a href="https://github.com/natm/templatevamp-flask" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/15.png" height="34" width="251"></a></p><h2><strong>Clean Bootstrap Dashboard Theme</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_09.jpg" alt="bootstrap admin theme backend template"></p><p><a href="https://github.com/keaplogik/Bootstrap-Clean-Dashboard-Theme" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/16.png" height="34" width="341"></a></p><h2><strong>Charisma Responsive Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_10.jpg" alt="Charisma bootstrap admin theme backend template"></p><p><a href="http://usman.it/free-responsive-admin-template/" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/17.png" height="34" width="209"></a></p><h2><strong>HTML5 Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_11.jpg" alt="HTML5 bootstrap admin theme backend template"></p><p><a href="https://medialoot.com/item/html5-admin-template/" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/18.png" height="34" width="242"></a></p><h2><strong>Hierapolis – A Bold Bootstrap Admin Template</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_13.jpg" alt="Hierapolis bootstrap admin theme backend template"></p><p><a href="https://github.com/lab2023/hierapolis" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/19.png" height="34" width="213"></a></p><h2><strong>Bootstrap Admin Theme</strong></h2><p><img src="https://speckyboy.com/wp-content/uploads/2014/05/bootstrap_admin_theme_14.jpg" alt="bootstrap admin theme backend template"></p><p><a href="https://github.com/VinceG/Bootstrap-Admin-Theme" target="_blank"><img src="https://techtalk.vn/wp-content/uploads/2018/02/20.png" height="34" width="320"></a></p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2018/02/bootstrap-themes-696x278.png",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  },{
    "id": "3cc57ee0-7846-11e8-a0c8-6d986570a",
    "name": "Khi công nghệ máy tính tiếp tục phát triển, nhu cầu về chất lượng các nhà cung cấp dịch vụ ngày càng cao hơn, đặc biệt là nhu cầu về số lượng lập trình web cũng gia tăng. Một phần lý do là vì hiện nay, lập trình viên web có thể làm được ",
    "priority": 1,
    "slug": "web",
    "short_description": "10 Kỹ Năng Mà Lập Trình Viên Web Cần Có Để Phát Triển",
    "content":`<p>Khi công nghệ máy tính tiếp tục phát triển, nhu cầu về chất lượng các nhà cung cấp dịch vụ ngày càng cao hơn, đặc biệt là nhu cầu về số lượng lập trình web cũng gia tăng. Một phần lý do là vì hiện nay, lập trình viên web có thể làm được nhiều thứ hơn so với trước đây. Điều đó có nghĩa họ cần nhiều kỹ năng hơn để hoàn thành tốt công việc được giao. Nếu hiện tại bạn là lập trình viên web, việc tập trung phát triển kỹ năng của bản thân sẽ giúp bạn có chỗ đứng vững trong ngành này. Vì vậy, dưới đây là một vài kỹ năng mà bạn nên có trong sơ yêu lí lịch của mình:</p><p><strong>Kỹ năng về JavaScript</strong></p><p>Javascript là một trong những kỹ năng quan trọng nhất mà các nhà tuyển dụng trên thế giới tìm kiếm trước khi họ thuê bất kỳ ai, không chỉ riêng lập trình viên. Đồng nghĩa với việc, một lập trình viên thành thạo kỹ năng này sẽ luôn tìm được một công việc, nơi mà họ luôn có thể tận dụng được kiến thức JavaScript của mình. Do đó, bạn cần làm mọi cách để nắm vững JavaScript nếu muốn giữ đứng vững trong lĩnh vực công nghệ. Tuy nhiên đừng bỏ qua các ngôn ngữ lập trình khác vì chúng cũng không kém phần quan trọng.</p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/JavaScript-Skills.jpg" height="453" width="850"></p><p>&nbsp;</p><p><strong>Sức thuyết phục</strong></p><p>Lập trình viên web hiển nhiên vẫn cần đến một số kỹ năng mềm quan trọng, chính những kỹ năng này sẽ giúp họ giữ vững trong sự nghiệp. Có thể kể đến: kỹ năng quản lý khách hàng, tư duy phản biện, kỹ năng giao tiếp. Kỹ năng quản lý khách hàng có thể giúp bạn đối phó với nhiều khách hàng với tính cách khác nhau mà không cần hiểu về bối cảnh hay kiến thức web của họ. Nếu bạn có ý kiến giúp cải thiện sản phẩm tốt hơn, kỹ năng này sẽ trở nên vô cùng hữu ích, khiến khách hàng tin tưởng bạn với dự án hơn nữa.</p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Persuasiveness.jpg" height="564" width="1000"></p><p>&nbsp;</p><p><strong>Học cách làm việc với các dự án dữ liệu lớn (big data project)</strong></p><p><br></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Big-Data-Projects.png" height="828" width="1400"></p><p>Càng ngày, các dự án có khuynh hướng chứa càng nhiều dữ liệu, việc làm quen sớm với các dự án dữ liệu lớn sẽ giúp ích lập trình viên rất nhiều. Chỉ trong một năm, big data project đã phát triển dữ dội và chưa có dấu hiệu dừng. Vì vậy, nếu muốn làm việc tốt hơn, bạn phải tìm cách biến mình thành “chuyên gia” với những dự án kiểu này. Nhiều chuyên gia cho rằng đây sẽ là xu hướng trong tương lai và những lập trình viên sẽ phải phát triển thêm kỹ năng để xử lý nhiều dữ liệu hơn trong dự án nếu cần thiết.</p><p>&nbsp;</p><p><strong>Sự linh động</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Flexibility.png" height="391" width="785"></p><p>Đây là một kỹ năng quan trọng mà các lập trình viên web cần thành thục. Yêu cầu của khách hàng biến đổi muôn hình vạn trạng, bạn sẽ phải sẵn sàng phục vụ họ để thu hút nhiều cơ hội công việc hơn. Ví dụ, nếu bạn là lập trình viên full-stack web, rất có thể bạn sẽ không cách nào đáp ứng được hết nhu cầu của khách hàng. Vì đâu mà bạn đắt khách thế? Phần lớn là nhờ vòa khả năng chuyển đổi dễ dãng từ công nghệ này sang công nghệ khác đấy.</p><p>&nbsp;</p><p><strong>Internet of things (IoT)</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/learn-IoT.jpg" height="444" width="790"></p><p>Mọi người đều muốn học về IoT, cả để đáp ứng nhu cầu tuyển dụng của nhiều công ty ngày nay, và đồng thời trâu dồi thêm kỹ năng cần thiết cho sự nghiệp. Đây cũng là một kỹ năng giúp lập trình viên web áp dụng vào môi trường sống của bản thân và những người xung quanh.</p><p>&nbsp;</p><p><strong>Tiếp cận Di Động</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Mobile-Web-Development.jpg" height="391" width="785"></p><p>Ngày nay, nhu cầu về lập trình viên di động đang rất cao cho những ai có thể phát triển những website đa trình duyệt và ứng dụng đa nền tảng. Lĩnh vực này không yêu cầu quá cao, miễn là bạn có thể lập trình tốt. Sau khi tiếp thị rộng rãi để thu hút và giữ chân khách hàng, thành công sẽ tự gõ của thôi.</p><p>&nbsp;</p><p><strong>Làm việc như một lập trình viên Full-Stack</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Full-Stack.jpg" height="640" width="1200"></p><p>Nếu có thể thoải mái phát triển web với bất kỳ công nghệ và nền tảng nào trên thị trường, bạn đã gần vươn đến đỉnh cao rồi đấy. Full-stack là một kỹ năng rất cần thiết cho lập trình viên web, vì đây là một trong những yêu cầu mà nhà tuyển dụng mong muốn. Nếu bạn muốn tiếp cận nhiều công việc hơn trong tương lai, hãy hướng đến full-stack để có thể làm việc hiệu quả hơn với bất kỳ công nghệ hay nền tảng nào.</p><p>&nbsp;</p><p><strong>Tăng cường bảo mật</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Intensify-your-Security.jpg" height="600" width="800"></p><p>Bảo mật vẫn là một trong những mối đe dọa lớn đối với nhiều công ty ngày nay. Lập trình viên cần phải học nhiều hơn về cách hoạt động an toàn trên web và cách bảo vệ các đoạn mã của mình. An ninh mạng cũng rất quan trọng trong môi trường web. Các công ty bạn đang làm việc cũng có thể bị ảnh hưởng. Bởi vậy, hãy học cách làm việc an toàn và bảo mật, không chỉ riêng cho bản thân mà cho cả khách hàng.</p><p>&nbsp;</p><p><strong>Đa dạng hóa</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Diversification.jpg" height="437" width="785"></p><p>Ngày nay, rất khó nhận biết người ta đang ưa chuộng thứ công nghệ nào, đặc biệt với ngôn ngữ lập trình lại càng khó hơn. Do đó, một lập trình viên thông minh sẽ đa dạng hóa để có thể sẵn sàng cho bất kỳ dự án nào. Có rất nhiều ngôn ngữ lập trình được sử dụng ngày nay, hầu hết đều rất dễ học. Không có ngôn ngữ nào là tốt nhất, chúng đều có những vị trí quan trọng khác nhau. Để bắt kịp xu hướng đang biến đổi ngày càng nhanh chóng, bạn buộc phải đa dạng hóa hơn nữa những kỹ năng đã có. Điều này sẽ giúp bạn sẵn sàng cho bất kỳ công việc nào trong tương lai.</p><p>&nbsp;</p><p><strong>Nhanh nhẹn hơn</strong></p><p><img src="http://codecondo.com/wp-content/uploads/2016/12/Business-Agility.jpg" height="391" width="785"></p><p>Đây là một trong những kỹ năng quan trọng nhất mà lập trình viên web cần phát triển. Sự nhanh nhẹn sẽ tỏ ra hữu ích trong lâu dài. Đại loại như bạn đang rất tham vọng nhưng vẫn phải tỏ ra khiêm tốn vậy. Kỹ năng chia dự án ra nhiều phần nhỏ, khả xác định việc cần ưu tiên, khả năng thích ứng với thay đổi và đảm bảo thể trạng tốt nhất tại mọi thời điểm,… là những phẩm chất cho bất cứ ai, ở bất cứ khi nào trong ngành này.</p><p>Mọi thứ đang thay đổi nhanh chóng trong ngành công nghệ máy tính. Lập trình viên web nên phát triển nhiều kỹ năng để có thể làm việc tốt, cũng như phục vụ được ngày càng nhiều khách hàng hơn nữa.</p>`,
    "status": 1,
    "thumb": "https://techtalk.vn/wp-content/uploads/2016/04/chang-trai-viet-khien-ong-lon-google-nhoc-cong-3-lan-moi-lam_PHQF.jpg",
    "created_at": "2018-06-25T14:06:09.749Z",
    "creator":"Simon",
  },
]

module.exports = {posts, users, categories, tags}